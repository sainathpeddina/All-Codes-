✅ How to Handle StaleElementReferenceException
✅ 1. Re-locate the element before interacting again
WebElement element = driver.findElement(By.id("submit")); // fresh reference
element.click();

✅ 2. Use try-catch and retry mechanism
You can handle the exception using a loop and retry locating the element.
public void clickElement(By locator) {
    int retries = 3;
    while (retries > 0) {
        try {
            driver.findElement(locator).click();
            break;
        } catch (StaleElementReferenceException e) {
            retries--;
            try {
                Thread.sleep(500); // wait a bit before retrying
            } catch (InterruptedException ie) {
                ie.printStackTrace();
            }
        }
    }
}

✅ 3. Use WebDriverWait to wait for element to be stable
WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
wait.ignoring(StaleElementReferenceException.class)
    .until(driver -> driver.findElement(By.id("submit")).isDisplayed());

✅ 4. Use ExpectedConditions to ensure the element is visible/stable
WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
WebElement element = wait.until(ExpectedConditions.refreshed(
    ExpectedConditions.elementToBeClickable(By.id("submit"))));
element.click();

✅ Step-by-Step: How to Handle Web Tables in Selenium (Java)
tagnames >>> table (<tbody>) and rows (<tr>) and columns (<td>) and headers (<th>) 
✅ 1. Locate the Table
WebElement table = driver.findElement(By.id("employeeTable"));
✅ 2. Get All Rows
List<WebElement> rows = table.findElements(By.tagName("tr"));
✅ 3. Loop Through Rows and Columns
for (WebElement row : rows) {
    List<WebElement> columns = row.findElements(By.tagName("td")); // skip header
    for (WebElement cell : columns) {
        System.out.print(cell.getText() + "\t");
    }
    System.out.println();
}
✅ 4. Handling Header Separately (Optional)
List<WebElement> headers = table.findElements(By.tagName("th"));
for (WebElement header : headers) {
    System.out.print(header.getText() + "\t");
}
System.out.println();
✅ 5. Get Specific Cell Data (e.g., Row 2, Column 1)
WebElement secondRowFirstCell = table.findElements(By.tagName("tr")).get(2)
                                     .findElements(By.tagName("td")).get(0);
System.out.println("Cell Data: " + secondRowFirstCell.getText());
✅ 6. Example: Click a Button Inside a Table Cell
for (WebElement row : rows) {
    List<WebElement> cols = row.findElements(By.tagName("td"));
    if (!cols.isEmpty() && cols.get(0).getText().equals("Jane")) {
        cols.get(3).findElement(By.tagName("button")).click(); // Assuming button is in 4th column
        break;
    }
}

driver.navigate().to("https://example.com");
driver.navigate().back();     // Go back in browser history
driver.navigate().forward();  // Go forward
driver.navigate().refresh();  // Refresh the current page

✅ Java Selenium Example: Finding Broken Links
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;

import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;

public class BrokenLinksChecker {

    public static void main(String[] args) {
        WebDriver driver = new ChromeDriver();
        driver.get("https://example.com"); // Change to your target URL

        List<WebElement> allLinks = driver.findElements(By.tagName("a"));
        System.out.println("Total links found: " + allLinks.size());

        for (WebElement linkElement : allLinks) {
            String url = linkElement.getDomAttribute("href");

            if (url == null || url.isEmpty() || !url.startsWith("http")) {
                System.out.println("Link is empty or not configured.");
                continue;
            }

            try {
                URL urlURL = new URL(url);
                HttpURLConnection connection = (HttpURLConnection) urlURL.openConnection();
                connection.setRequestMethod("HEAD");
                connection.setConnectTimeout(3000);
                connection.connect();

                int responseCode = connection.getResponseCode();
                String responseMessage = connection.getResponseCode();
                if (responseCode >= 400) {
                    System.out.println("❌ Broken link: " + url + " → Code: " + responseCode +  " → Message: " + responseMessage);
                } else {
                    System.out.println("✅ Valid link: " + url + " → Code: " + responseCode +  " → Message: " + responseMessage);
                }

            } catch (Exception e) {
                System.out.println("❌ Error checking link: " + url + " → Exception: " + e.getMessage());
            }
        }

        driver.quit();
    }
}

✅ General Steps to Handle Dynamic Dropdown
Click on the dropdown to expand the options.
Wait for the dropdown items to be visible (Explicit Wait).
Find the desired option in the list.
Click on the option.

import org.openqa.selenium.*;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.*;

import java.time.Duration;
import java.util.List;

public class DynamicDropdownWithStaleHandling {
    public static void main(String[] args) {
        WebDriver driver = new ChromeDriver();
        driver.get("https://example.com");

        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));

        // Step 1: Type in the search box
        WebElement inputBox = driver.findElement(By.id("search-box"));
        inputBox.sendKeys("Ind");

        // Step 2: Wait for suggestions to appear
        wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("suggestions")));

        // Step 3: Try clicking the desired option, retrying if stale
        boolean optionClicked = false;
        int attempts = 0;

        while (!optionClicked && attempts < 3) {
            try {
                // Step 3.1: Re-fetch the elements inside try block
                List<WebElement> suggestions = driver.findElements(By.xpath("//ul[@id='suggestions']/li"));

                for (WebElement option : suggestions) {
                    if (option.getText().equals("India")) {
                        option.click();
                        optionClicked = true;
                        break;
                    }
                }
            } catch (StaleElementReferenceException e) {
                System.out.println("Caught stale element, retrying...");
                attempts++;
                // Optional: short wait before retrying
                try {
                    Thread.sleep(500);
                } catch (InterruptedException ignored) {}
            }
        }

        if (!optionClicked) {
            System.out.println("Option 'India' not found or failed to click.");
        }

        driver.quit();
    }
}



